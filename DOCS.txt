NB:
    + Riferimenti a metodi di classi e oggetti:
        Classe.metodo()

        esempio codice: obj.test(); -> nel docs diventa: ClassObj.test()

Classi:
    + MySqlConnection:
        Descrizione:
                Gestisce la connessione con il database.
                Il suo uso non è essenziale poiché integrato nella classe Database.
        Metodi principali:
                { MySqlConnection(), void connect(), void close() }
    + Database:
        Descrizione:
            Gestisce la connessione e l'interazione con il database, permetendo di fare le query
        Metodi principali: {
                Database(user, password) -> istanzia MySqlConnection()
                void connect(server_ip, porta, nome_db) -> esegue la connessione, richiamando MySqlConnection.connect()
                ResultSet query(query) -> esegue la query, ritornando ResultSet
                void close() -> chiude la connessione al database
            }
        Esempio:
            @Override
            protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
                response.setContentType("text/html");
                PrintWriter out = response.getWriter();
                Database db = new Database("root", "");
                db.connect("127.0.0.1", "3306", "test");
                ResultSet res = db.query("SELECT * FROM test");
                try {
                    while (res.next()) {
                        out.println(res.getString(1) + " " + res.getString(2) + " " + res.getString(3) + " " + res.getString(4) + "<br>");
                    }
                } catch (SQLException e) {
                    Logger.error(e.getMessage());
                }
                db.close(); // chiusura della connessione
            }



CRITICITà:
    - Performance: 
        1) la verifica della sessione, per login e register, impatta sul server
    - Sicurezza:
        1) mancanza di crittografia
        2) verifica della password